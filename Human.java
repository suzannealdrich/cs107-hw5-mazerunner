//---------------------------------------------------------------80 columns---|/* Human class * ----------- * This is the class that specifies the behavior of human threads. * The human moves or digs according to the keyboard,  * advances to the next level after occupying a goal,  * stores energy apples for digging, and ends the game when dying. */public class Human extends Creature {	private int energyApples;		public Human(Square start)	{		super(start);		image = "Human";		energyApples = 0;	}	public Location getLocation()	{	    return place.getLocation();	}    public void takeGoal()	{	    game.levelOver(true);	}    public void die()	{	    game.levelOver(false);	}	protected Square plan()	{		while (true) { 			Location thisLoc = place.getLocation(), nextLoc;			switch (Display.getKeyFromUser()) {			case 'i': nextLoc = thisLoc.adjacentLocation(Location.North); break;			case 'k': nextLoc = thisLoc.adjacentLocation(Location.South); break;			case 'j': nextLoc = thisLoc.adjacentLocation(Location.West); break;			case 'l': nextLoc = thisLoc.adjacentLocation(Location.East); break;			case 's': dig(thisLoc.adjacentLocation(Location.Southwest)); continue;			case 'f': dig(thisLoc.adjacentLocation(Location.Southeast)); continue;			case 'n': game.levelOver(true); continue;			case 'q': game.levelOver(false); continue;            default: Display.drawStatusMessage("Not a valid key"); continue;            }            if (game.inBounds(nextLoc)) {                Square nextSquare = game.getSquareAt(nextLoc);                if (nextSquare.isEnterable()) {                    Display.drawStatusMessage("Go MazeRunner, Go!");                    return nextSquare;                }            }            Display.drawStatusMessage("Can't go there!"); 		}	}    protected void storeEnergy()	{        Display.drawStatusMessage("Energy Apples: " + ++energyApples);	}    private void dig(Location loc)	{		if (game.inBounds(loc)) {			Square hole = game.getSquareAt(loc);	    	if (hole.isDiggable()) {				if (energyApples > 0) {	    			((Brick)hole).open();	        		energyApples--;				}				Display.drawStatusMessage("Energy Apples: " + energyApples);				return;			}	    }		Display.drawStatusMessage("Can't dig there!");	}}