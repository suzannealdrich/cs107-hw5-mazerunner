//---------------------------------------------------------------80 columns---|/* Hyper class * ----------- * This is the class that specifies the behavior of hyper objects. * The class itself has a static list of other hyper squares. Each * hyper draws itself specially, and hypers entering creatures to * the next hyper square in the sequence. */import java.util.Vector;public class Hyper extends Square {        private static Vector hyperSquares;    private int number;    public Hyper(Location loc, char num)    {           super(loc);        number = Util.char2int(num);        hyperSquares.addElement(this);    }    public static void init()    {        hyperSquares = new Vector();    }    public static void clear()    {        hyperSquares.removeAllElements();    }    public synchronized void draw()    {        Display.drawAtLocation("Hyper", Util.int2char(number), location);        super.draw();    }    public void enterAction(Creature occupant)    {        super.enterAction(occupant);        occupant.pause(200);            // pause to witness hyper        occupant.transfer(nextHyper());    }    private Hyper nextHyper()    {        int nextNumber = (number + 1) % hyperSquares.size();        Hyper nextHyperSquare = this;                for (int i = 0; i < hyperSquares.size(); i++) {			nextHyperSquare = (Hyper)hyperSquares.elementAt(i);			if (nextHyperSquare.number == nextNumber) break;		}		return nextHyperSquare;	}}